///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT CHANGE THE BELOW SETTINGS UNLESS YOU REALLY KNOW WHAT YOU ARE DOING
///////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// USER CONTROL OPTIONS
// Manual Control and Remote Control can be enabled at the same time BUT Remote Control overrides Manual Control

// MANUAL CONTROL ****************************
const int inputMan1 = 5; // Manual input pin 1 - digital - forward
const int inputMan2 = 7; // Manual input pin 2 - digital - reverse
const int inputMan3 = 9; // Manual input pin 3 - digital - brake
const int inputMan4 = 9; // Manual input pin 4 - digital - horn
const int inputMan5 = 9; // Manual input pin 5 - digital - indicator1
const int inputMan6 = 9; // Manual input pin 6 - digital - indicator2
const int inputMan7 = 9; // Manual input pin 7 - digital - cruiseControl
const int inputMan8 = 9; // Manual input pin 8 - Analog - Limit forward/reverse speed
const int inputMan9 = 9; // Manual input pin 9 - Analog - Limit forward/reverse speed
const int inputMan10 = 9; // Manual input pin 10 - Analog - Headlights
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// REMOTE CONTROL
// PWM OR PPM

// PWM
const int inputPwmThrottle = 13; // PWM throttle input
const int inputPwmSteering = 14; // PWM steering input
const int inputPwmSwitch = 15; // PWM switch input

// PPM - pins 2,3 for Arduino Nano
const int inputPPM = 15; // PPM input for 8 RC channels
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// BUZZER
const int buzzer = 10; // Buzzer pin
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// HORN
const int horn = 10; // Horn pin
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// HEADLIGHTS
const int headLights = 10; // Headlights pin
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// BRAKE LIGHTS
const int brakeLights = 10; // Brake lights pin
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// ERROR LED
const int errorLed = 10; // Error led pin
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// SPI -> MCP4XXX
const int MCP4XXX_CS = 10; // (SS) or Chip Select
// 11 (MOSI)
// 12 (MISO)
// 13 (SCK)
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// SOFTWARE SERIAL -> Dimension Engineering Motor controllers
const int SSTxPin = 11; // Tx
const int SSRxPin = NOT_A_PIN; // Tx
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// I2C -> OLED, MPU-9250
const int sda = A4;
const int sdl = A4;
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// NOT_A_PIN
//#define NOT_A_PIN 127;
////////////////////////////////////////////////////////////////////////
